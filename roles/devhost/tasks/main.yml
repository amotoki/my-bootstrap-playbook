---
- name: Set host name
  become: yes
  hostname:
    name: "{{ inventory_hostname }}"
  when: inventory_hostname not in ["localhost", "127.0.0.1"]

- name: Set /etc/hosts
  become: yes
  copy:
    src: hosts
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: skip_hosts is defined and not skip_hosts

- name: Set apt proxy if necessary
  become: yes
  template:
    src: apt.conf
    dest: /etc/apt/apt.conf.d/00proxy
  when: deb_proxy is defined

- name: Add proxy to /etc/environment
  lineinfile:
    dest: /etc/environment
    regexp: "{{item.regexp}}"
    line: "{{item.line}}"
  with_items:
  - regexp: ^http_proxy=
    line: "http_proxy={{proxy.scheme}}://{{proxy.host}}:{{proxy.port}}/"
  - regexp: ^https_proxy=
    line: "https_proxy={{proxy.scheme}}://{{proxy.host}}:{{proxy.port}}/"
  when: proxy is defined
  become: yes

- name: Add no_proxy to /etc/environment
  lineinfile:
    dest: /etc/environment
    regexp: ^no_proxy=
    line: "no_proxy={{no_proxy}}"
  when: no_proxy is defined
  become: yes

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Install packages
  apt:
    pkg:
      - aptitude
      - colordiff
      - curl
      - emacs-nox
      - git
      - git-review
      - jq
      - lv
      - ntp
      - pbzip2
      - python
      - python-dev
      - screen
      - sl
      - tmux
      - vim
      #- virtualenvwrapper
      - yaml-mode
    state: present
  become: yes

- name: Install packages for Ubuntu focal
  apt:
    pkg:
      - python3-pip
      - python3-ipython
    state: present
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_release == "focal"

- name: Install packages for Ubuntu focal
  apt:
    pkg:
      - ipython
      - python-pip
    state: present
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_release != "focal"

- name: gather remote user name
  command: whoami
  register: username
  when: sudo_nopass|default()
  changed_when: no
- name: set fact username
  set_fact:
    username: "{{username.stdout}}"
  when: sudo_nopass|default()
- name: set no password sudoers for ubuntu
  template:
    src: sudoers_nopasswd
    dest: /etc/sudoers.d/dev_nopasswd
  when: sudo_nopass|default()
  become: yes
